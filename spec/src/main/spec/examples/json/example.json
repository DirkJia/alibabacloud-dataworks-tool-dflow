{
  "version": "1.1.0",
  "kind": "CycleWorkflow",
  "metadata": {
    "owner": 123124124,
    "description": "desc"
  },
  "spec": {
    "variables": [
      {
        "id": "global_var_0",
        "name": "global_var_0",
        "scope": "Workspace",
        "type": "Constant",
        "value": "global_value"
      },
      {
        "id": "bizdate",
        "name": "bizdate",
        "scope": "NodeParameter",
        "type": "System",
        "value": "${yyyymmdd}"
      },
      {
        "id": "hour",
        "name": "hour",
        "scope": "NodeParameter",
        "type": "System",
        "value": "${hi24mmss}"
      },
      {
        "id": "region",
        "name": "region",
        "scope": "NodeParameter",
        "type": "Constant",
        "value": "cn-shanghai"
      },
      {
        "id": "ctx_output_1",
        "name": "output",
        "scope": "Workspace",
        "type": "Constant",
        "value": ""
      }
    ],
    "scripts": [
      {
        "id": "script_file1",
        "path": "/path/to/file1.sql",
        "language": "sql",
        "runtime": {
          "engine": "MaxCompute",
          "command": "ODPS_SQL"
        },
        "parameters": [
          "{{variables.bizdate}}",
          "{{variables.hour}}",
          "{{variables.region}}"
        ]
      },
      {
        "id": "script_file2",
        "path": "/path/to/file2.py",
        "runtime": {
          "engine": "MaxCompute",
          "command": "PY_ODPS"
        },
        "language": "python"
      }
    ],
    "runtimeResources": [
      {
        "id": "resgroup_1",
        "resourceGroup": "S_xxx_yyy"
      }
    ],
    "triggers": [
      {
        "id": "daily",
        "type": "Scheduler",
        "cron": "00 00 00 * * ?",
        "startTime": "2023-01-01T00:00:00",
        "endTime": "2024-01-01T00:00:00"
      }
    ],
    "artifacts": {
      "tables": [
        {
          "id": "table1",
          "guid": "odps.autotest.table_1"
        },
        {
          "id": "table2",
          "guid": "odps.autotest.table_2"
        },
        {
          "id": "table3",
          "guid": "odps.autotest.table_3"
        }
      ],
      "nodeOutputs": [
        {
          "id": "artifact_1",
          "data": "autotest.output_1",
          "refTableName": "autotest.table_1"
        }
      ]
    },
    "nodes": [
      {
        "id": "node_existed_xx",
        "reference": {
          "output": "autotest.table_1"
        }
      },
      {
        "id": "node_1",
        "script": "{{script_file1}}",
        "recurrence": "Normal",
        "priority": 7,
        "timeout": 4,
        "instanceMode": "T+1",
        "rerunMode": "Allowed",
        "inputs": {
          "tables": [
            "{{artifacts.table1}}",
            "{{artifacts.table2}}"
          ]
        },
        "outputs": {
          "tables": [
            "{{artifacts.table3}}"
          ]
        },
        "trigger": "{{triggers.daily}}",
        "runtimeResource": "{{runtimeResources.resgroup_1}}"
      },
      {
        "id": "node_2",
        "script": "{{scripts.script_file2}}",
        "trigger": "{{triggers.daily}}",
        "runtimeResource": "{{runtimeResources.resgroup_1}}"
      }
    ],
    "flow": [
      {
        "nodeId": "{{node_1}}",
        "depends": [
          {
            "nodeId": "{{node_existed_xx}}",
            "type": "Normal"
          }
        ]
      },
      {
        "nodeId": "{{node_2}}",
        "depends": [
          {
            "nodeId": "{{node_existed_xx}}",
            "type": "CrossCycleDependsOnOtherNode"
          },
          {
            "type": "CrossCycleDependsOnSelf"
          },
          {
            "type": "CrossCycleDependsOnChildren"
          }
        ]
      }
    ]
  }
}