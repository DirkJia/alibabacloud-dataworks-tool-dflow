version: 1.1.0
kind: CycleWorkflow
spec:
  # function example
  fileResources:
    - id: res_2
      name: file2.jar
      type: jar
      file:
        storage:
          type: oss
        path: /path/to/file2.jar
        extension: .jar
  functions:
    - id: geo_loc
      name: geo_loc
      type: MATH
      className: com.aliyun.odps.udf.example.GeoLocation
      datasource:
        type: odps
        name: autotest
      runtimeResource:
        resourceGroup: "group1"
      armResource: "arm_res1"
      fileResources: [ "{{res_2}}" ]
      usageDescription: |
        This function is used to calculate the geographic location of the IP address.
        The input is the IP address, and the output is the geographic location.
      argumentDescription: |
        - name: ip
          desc: The IP address to be calculated.
          type: STRING
        - name: city
          desc: The city name corresponding to the IP address.
          type: STRING
        - name: province
          desc:
      returnValueDescription: |
        - name: city
          desc: The city name corresponding to the IP address.
          type: STRING
        - name: province
          desc: The province name corresponding to the IP address.
          type: STRING
      usageExample: |
        # The input is the IP address, and the output is the geographic location.
        SELECT geo_loc('127.0.0.1', city, province) FROM table1;
      embeddedCodeType: python2
      embeddedCode: |
        # The input is the IP address, and the output is the geographic location.
        def evaluate(ip, city, province):
            return city, province
      resourceType: embedded

